{
  "version": 3,
  "sources": ["../../../../../../../../devtools/projects/shell-chrome/src/app/ng-validate.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/// <reference types=\"chrome\"/>\n\nexport interface AngularDetection {\n  // This is necessary because the runtime\n  // message listener handles messages globally\n  // including from other extensions. We don't\n  // want to set icon and/or popup based on\n  // a message coming from an unrelated extension.\n  isAngularDevTools: true;\n  isIvy: boolean;\n  isAngular: boolean;\n  isDebugMode: boolean;\n  isSupportedAngularVersion: boolean;\n}\n\nwindow.addEventListener('message', (event: MessageEvent) => {\n  if (event.source === window && event.data) {\n    chrome.runtime.sendMessage(event.data);\n  }\n});\n\nfunction detectAngular(win: Window): void {\n  const isDebugMode = Boolean((win as any).ng);\n  const ngVersionElement = document.querySelector('[ng-version]');\n  let isSupportedAngularVersion = false;\n  let isAngular = false;\n  if (ngVersionElement) {\n    isAngular = true;\n    const attr = ngVersionElement.getAttribute('ng-version');\n    const major = attr ? parseInt(attr.split('.')[0], 10) : -1;\n    // In case of g3 apps we support major 0.\n    if (attr && (major >= 9 || major === 0)) {\n      isSupportedAngularVersion = true;\n    }\n  }\n\n  win.postMessage(\n      {\n        // Needs to be inline because we're stringifying\n        // this function and executing it with eval.\n        isIvy: typeof (window as any).getAllAngularRootElements?.()?.[0]?.__ngContext__ !==\n            'undefined',\n        isAngular,\n        isDebugMode,\n        isSupportedAngularVersion,\n        isAngularDevTools: true,\n      } as AngularDetection,\n      '*');\n\n  if (!isAngular) {\n    setTimeout(() => detectAngular(win), 1000);\n  }\n}\n\nfunction installScript(fn: string): void {\n  const source = `;(${fn})(window)`;\n  const script = document.createElement('script');\n  script.textContent = source;\n  document.documentElement.appendChild(script);\n  const parentElement = script.parentElement;\n  if (parentElement) {\n    parentElement.removeChild(script);\n  }\n}\n\nif (document instanceof HTMLDocument) {\n  installScript(detectAngular.toString());\n}\n"],
  "mappings": ";;AAAA,AAuBA,SAAO,iBAAiB,WAAW,CAAC,UAAuB;AACzD,QAAI,MAAM,WAAW,UAAU,MAAM,MAAM;AACzC,aAAO,QAAQ,YAAY,MAAM;;;AAIrC,yBAAuB,KAAW;AAChC,UAAM,cAAc,QAAS,IAAY;AACzC,UAAM,mBAAmB,SAAS,cAAc;AAChD,QAAI,4BAA4B;AAChC,QAAI,YAAY;AAChB,QAAI,kBAAkB;AACpB,kBAAY;AACZ,YAAM,OAAO,iBAAiB,aAAa;AAC3C,YAAM,QAAQ,OAAO,SAAS,KAAK,MAAM,KAAK,IAAI,MAAM;AAExD,UAAI,QAAS,UAAS,KAAK,UAAU,IAAI;AACvC,oCAA4B;;;AAIhC,QAAI,YACA;MAGE,OAAO,OAAQ,OAAe,gCAAgC,IAAI,kBAC9D;MACJ;MACA;MACA;MACA,mBAAmB;OAErB;AAEJ,QAAI,CAAC,WAAW;AACd,iBAAW,MAAM,cAAc,MAAM;;;AAIzC,yBAAuB,IAAU;AAC/B,UAAM,SAAS,KAAK;AACpB,UAAM,SAAS,SAAS,cAAc;AACtC,WAAO,cAAc;AACrB,aAAS,gBAAgB,YAAY;AACrC,UAAM,gBAAgB,OAAO;AAC7B,QAAI,eAAe;AACjB,oBAAc,YAAY;;;AAI9B,MAAI,oBAAoB,cAAc;AACpC,kBAAc,cAAc;;",
  "names": []
}
